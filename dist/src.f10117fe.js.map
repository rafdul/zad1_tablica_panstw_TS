{"version":3,"sources":["src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/**\r\n * Ściągnij wszystkie możliwe dane państw z pomocą API: https://restcountries.eu/. W dalszej części kursu będą one nazywane Tablicą Państw (TP).\r\n * Ściągnięte dane zapisz w sposób, który pozwoli na ich ponowne wykorzystanie po zamknięciu i ponownym otwarciu przeglądarki,\r\n * \r\n * Przy starcie aplikacji sprawdź, czy dane państw istnieją w pamięci przeglądarki. Jeśli nie, ściągnij je,\r\n * Przy starcie aplikacji sprawdź ile czasu minęło od poprzedniego ściągnięcia danych państw. \r\n * Jeśli od ostatniego razu minęło co najmniej 7 dni, ściągnij i zapisz je ponownie.\r\n * \r\n * Stwórz metodę, która przy ponownym ściąganiu danych państw porówna populację między starym \r\n * i nowym zestawem danych oraz wyświetli wszystkie nazwy państw, których populacja uległa zmianie.\r\n *\r\n * Kod powinien być w pełni otypowany.\r\n * Kod powinien posiadać pełen zestaw testów (Jest).\r\n * Kod może posiadać komentarze.\r\n**/\r\n\r\nwindow.onload = function() {\r\n    console.log('App started!');\r\n\r\n    tableWithStates.init();\r\n}\r\n\r\n\r\n// interfejsy zmiennych\r\ninterface Texts {\r\n    tableWithStates: {\r\n        init: {a: string, b: string, c: string},\r\n        downloadFromAPI: {a: string, b: string},\r\n        downloadFromApiAgain: {a: string, b: string},\r\n        infoAboutChangingPopulation: {a: string, b: string},\r\n    },\r\n    storage: {\r\n        saveStorage: {a: string}\r\n    }\r\n};\r\n\r\n// zmienna zawierająca bibliotekę komunikatów w konsoli\r\nvar textsForConsoleLog: Texts = {\r\n    tableWithStates: {\r\n        init: {\r\n            a: 'Pobrałem dane zapisane w localStorage. Liczba państw w localStorage to: ',\r\n            b: 'Dane państw zapisane w localStorage: ',\r\n            c: 'Łączę się z API',\r\n        },\r\n        downloadFromAPI: {\r\n            a: 'Dane państw pobrane z API:',\r\n            b: 'Brak łączności z API',\r\n        },\r\n        downloadFromApiAgain: {\r\n            a: 'Korzystam z localstorage i nie pobieram nowych danych z API. Od ostatniego pobrania z API upłynęło mniej niż ',\r\n            b: 'Od ostatniego pobrania z API upłynęło więcej niż 6 dni, więc ponownie pobieram dane z API.',\r\n        },\r\n        infoAboutChangingPopulation: {\r\n            a: 'Od ostatniego pobrania z API zmieniła się liczba ludności w krajach: ',\r\n            b: 'Od ostatniego pobrania z API nie zmieniła się liczba ludności w żadnym kraju.',\r\n        }\r\n    },\r\n    storage: {\r\n        saveStorage: {\r\n            a: 'Błąd zapisu w localStorage (brak przekazanych danych)',\r\n        }\r\n    }\r\n}\r\n\r\nclass TableWithStates {\r\n\r\n    url: string = \"https://restcountries.com/v3/all\";\r\n    dateDownloadFromApi: number = 0;\r\n    tableAfterComparison: Array<{}> = [];\r\n\r\n    init(): void {\r\n        if( this.downloadFromApiAgain( storage.getStorage('date') ) === false && storage.getStorage('states').length > 0 ) {\r\n            console.log(textsForConsoleLog.tableWithStates.init.a, storage.getStorage('states').length);\r\n            console.log(textsForConsoleLog.tableWithStates.init.b, storage.getStorage('states'));\r\n        } else {\r\n            console.log(textsForConsoleLog.tableWithStates.init.c);\r\n            this.downloadFromAPI();\r\n        }\r\n    }\r\n\r\n    // pobranie danych z API; zapisanie w local storage pobranych danych i timestamp pobrania (wersja async / await)\r\n    // downloadFromAPI = async() => { \r\n    //     try {\r\n    //         const response = await fetch(this.url);\r\n    //         console.log('response typ:', typeof response, ' zawartość: ', response);\r\n    //         const responseJson = await response.json();\r\n    //         console.log('responseJson typ:', typeof responseJson, ', czy tablica?', Array.isArray(responseJson), ' zawartość: ', responseJson);\r\n\r\n    //         console.log(textsForConsoleLog.tableWithStates.downloadFromAPI.a, responseJson);\r\n\r\n    //         if(storage.getStorage('states').length > 0) {\r\n    //             this.infoAboutChangingPopulation(storage.getStorage('states'), responseJson);\r\n    //         }\r\n\r\n    //         let time: any = new Date();\r\n    //         this.dateDownloadFromApi = time.getTime();\r\n    //         storage.saveStorage('date', this.dateDownloadFromApi);\r\n\r\n    //         storage.saveStorage('states', responseJson);\r\n    //     }\r\n    //     catch(err) {\r\n    //         throw new Error(textsForConsoleLog.tableWithStates.downloadFromAPI.b)\r\n    //         // console.log(textsForConsoleLog.tableWithStates.downloadFromAPI.b, ' | ',err)\r\n    //     }\r\n    // }\r\n\r\n    downloadFromAPI(): void { \r\n        fetch(this.url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Dane państw pobrane z API:', data);\r\n\r\n                if(storage.getStorage('states') && storage.getStorage('states').length > 0) {\r\n                    this.infoAboutChangingPopulation(storage.getStorage('states'), data);\r\n                }\r\n\r\n                let time: Date = new Date();\r\n                this.dateDownloadFromApi = time.getTime();\r\n                // console.log('this.dateDownloadFromApi typ:', typeof this.dateDownloadFromApi, this.dateDownloadFromApi)\r\n                storage.saveStorage('date', this.dateDownloadFromApi);\r\n                \r\n                storage.saveStorage('states', data);\r\n            })\r\n            .catch(err => {\r\n                throw new Error(textsForConsoleLog.tableWithStates.downloadFromAPI.b)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    // sprawdzenie, czy ponowanie pobrać dane z API (zwrócenie flagi true = pobrać, false = korzystać z localStorage)\r\n    downloadFromApiAgain(timeDownloadFromApi: number[]): boolean {\r\n        console.log('start sprawdź datę w localstorage');\r\n        console.log('timeDownloadFromApi', timeDownloadFromApi, ' to jet typ ', typeof timeDownloadFromApi)\r\n\r\n        const MS_IN_6DAYS: number = 6*24*60*60*1000;\r\n        const MS_FOR_TEST: number = 30*1000;\r\n        const timeNow: number = (new Date).getTime();\r\n        let differenceInMs: number = 0\r\n        if(timeDownloadFromApi.length === 1) {\r\n            differenceInMs = timeNow - timeDownloadFromApi[0];\r\n        }\r\n        console.log('differenceInMs', typeof differenceInMs, differenceInMs)\r\n\r\n        if(differenceInMs <= MS_FOR_TEST) {\r\n            console.log(textsForConsoleLog.tableWithStates.downloadFromApiAgain.a, MS_FOR_TEST + 'ms')\r\n            return false;\r\n        } else {\r\n            console.log(textsForConsoleLog.tableWithStates.downloadFromApiAgain.b)\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // porównanie populacji z dwóch zbiorów danych\r\n    comparePopulationBetweenData(stateDataOld: any, stateDataNew:any) {\r\n        // console.log('typ stateDataOld:', typeof stateDataOld, '| ', stateDataOld); //typ object\r\n        // console.log('typ stateDataNew:', typeof stateDataNew, '| ', stateDataNew);\r\n\r\n        if(stateDataOld.alpha3Code === stateDataNew.alpha3Code) {\r\n            if(stateDataOld.population !== stateDataNew.population) {\r\n                // console.log('liczba ludności zmieniła się w: ', stateDataOld.name);\r\n                this.tableAfterComparison.push(stateDataOld.name);\r\n                return ;\r\n            } \r\n        } \r\n    }\r\n\r\n    // pętla po starym zestawie danych\r\n    infoAboutChangingPopulation(oldData: [], newData: []): void {\r\n        // console.log('oldData:', Array.isArray(oldData) ,typeof oldData,oldData);\r\n        // console.log('newData:',Array.isArray(newData), typeof newData, newData);\r\n        for(let i = 0; i < oldData.length; i++) {\r\n            newData.find(el => this.comparePopulationBetweenData(el, oldData[i]));\r\n        }\r\n        return (this.tableAfterComparison.length > 0) \r\n            ? console.log(textsForConsoleLog.tableWithStates.infoAboutChangingPopulation.a, this.tableAfterComparison) \r\n            : console.log(textsForConsoleLog.tableWithStates.infoAboutChangingPopulation.b);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet tableWithStates = new TableWithStates();\r\n\r\n\r\n\r\n// klasa od localStorage; oddzielne metody do zapisu i odczytu danych o państwach oraz daty pobrania z API\r\nclass StorageBrowser {\r\n    getStorage(key: string): any {\r\n        let content: number[] | [] = [];\r\n        let contentInLocalStorage: string|null = localStorage.getItem(key);\r\n\r\n        if(contentInLocalStorage !== null) {\r\n            let fromJSON: any = JSON.parse(contentInLocalStorage);\r\n            if (typeof fromJSON === 'number') {\r\n                let newTab: number[] = [];\r\n                newTab.push(fromJSON);\r\n                content = newTab;\r\n            } else {\r\n                content = fromJSON;\r\n            }\r\n\r\n            // console.log(key, 'localStorage.getItem(key)', typeof localStorage.getItem(key));\r\n            // console.log(key, 'content typ',typeof content);\r\n            // console.log('content w getStorage', 'klucz ', key, typeof content);\r\n            \r\n        } else {\r\n            console.log('localstorage jest pusty dla klucza:', key)\r\n            content = [];\r\n        }\r\n        console.log(key, 'content', typeof content, 'czy tablica: ', Array.isArray(content));\r\n        return content;\r\n    }\r\n\r\n    saveStorage(key: string, item: any ): void {\r\n        console.log('item w saveStorage', typeof item, 'klucz', key, ' zawartość: ', item);\r\n        if(item === null || item === undefined) {\r\n            return console.log(textsForConsoleLog.storage.saveStorage.a)\r\n        };\r\n        if(typeof item == 'number') {\r\n            localStorage.setItem(key, `${item}`)\r\n        };\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n    }\r\n}\r\n\r\nconst storage = new StorageBrowser();\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}